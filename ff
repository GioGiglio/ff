#!/bin/bash

# author Giovanni Giglio (@GioGiglio)

function on_file_selected {
	local OPTIONS=("Navigate" "Open" "Show" "Exit")

	select OPT in ${OPTIONS[@]}; do

		case "$OPT" in
		Navigate)
			local path=$(dirname $1)
			xdg-open $path 2> /dev/null &

			# check for errors
			if [ $? -ne 0 ]; then
				echo 'Error: could not open the file'
				echo 'See ff --help for more info'
				exit
			fi
			break ;;

		Open)
			xdg-open $1 2> /dev/null &

			# check for errors
			if [ $? -ne 0 ]; then
				echo 'Error: could not open the file'
				echo 'See ff --help for more info'
				exit
			fi
			break ;;

		Show)
			less $1 2> /dev/null

			# check for errors
			if ! [ $? -eq 0 ]; then
				echo 'Error: could not open the file'
				exit
			fi
			;;
		Exit)
			exit ;;
		*) 
			echo "Insert a valid option" ;;
		esac
	done
}

function on_files_found {
	local OCC=$(echo $PATHS | wc -w)

	if [ $OCC -eq 1 ]; then
		echo "1 occurrence found"
		on_file_selected $PATHS
	else
		echo "$OCC occurrences found"
		COLUMNS=12

		select OPT in $PATHS; do
			if [ -z $OPT ]; then
				echo 'Insert a valid option'
			else
				on_file_selected $OPT
				exit
			fi
		done
	fi
}

function print_help {
	echo 'Usage: ff [OPTIONS]... [FILE]...'
	echo 'Searchs a file'
	echo 
	echo '    -i, --ignorecase    ignores case of filename'
	echo '    -c, --containing    matches files containing ... in the path'
	echo '    -h, --help          prints this help and exit'
	echo
	echo 'Somethimes this error message can be shown:'
	echo '    Error: could not open the file'
	echo
	echo 'This can be caused by many factors:'
	echo '1) The file does not exist. It might have been deleted, or renamed or moved'
	echo '    In this case: run sudo updatedb to update your local db'
	echo
	echo '2) You might not have the permissions to open the file'
	echo '    In this case: run the command as root'
	echo
	echo '3) The file is corrupted or you do not have any program to open it'
	echo
	echo 'Please report any bug to the official page www.github.com/GioGiglio/ff'
}

# Script starts here #

ARG_I=0
ARG_C=0
ARG_H=0

POSITIONAL=()

# parse args
	while [[ $# -gt 0 ]]
	do
		arg="$1"

		case $arg in
			-i|--ignorecase) 
				ARG_I=1
				shift
				;;
			-h|--help)
				ARG_H=1
				shift
				;;
			-c|--containing)
				ARG_C=1
				shift
				;;
			*)
				POSITIONAL+=("$1")
				shift
				;;
		esac
	done

set -- ${POSITIONAL[@]}

# check ARG_HELP
if [ $ARG_H -eq 1 ]; then
	print_help
	exit
fi

# check filename
if [ -z "$1" ]; then
	printf 'filename: '
	read FILENAME
else
	FILENAME=$1
fi

#Check ARG_IGNORECASE and ARG_CONTAINING

if [ $ARG_I -eq 1 ]; then
	if [ $ARG_C -eq 1 ]; then
		# IGNORECASE, CONTAIN
		PATHS="$(locate -ir "/$FILENAME")"
	else
		# IGNORECASE
		PATHS="$(locate -ir "/$FILENAME\$")"
	fi
else
	if [ $ARG_C -eq 1 ]; then
		# NOT IGNORECASE, CONTAIN
		PATHS="$(locate -r "/$FILENAME")"
	else
		#NOT IGNORECASE, NOT CONTAIN
		PATHS="$(locate -r "/$FILENAME\$")"
	fi
fi

if [ -z "$PATHS" ]; then
	echo "$FILENAME" not found
	exit
else
	on_files_found
fi 